{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AACZC,OADY,kBACLC,MADK,EACG;AACd,MAAMC,YAAYC,SAASC,aAAT,CAAuB,UAAvB,CAAlB,CADc,CACuC;AACrDF,YAAUG,SAAV,GAAsBJ,OAAOK,IAAP,EAAtB,CAFc,CAEsB;AACpC,SAAOJ,UAAUK,OAAV,CAAkBC,UAAzB,CAHc,CAGsB;AACpC,EALW;AAMZC,MANY,iBAMNC,IANM,EAMAC,KANA,EAMO;AAClBD,OAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,KAAKI,WAAzC,EADkB,CACoC;AACtD,EARW;AASZC,OATY,kBASLL,IATK,EASCC,KATD,EASQ;AACnBD,OAAKE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,IAApC;AACA,EAXW;AAYZM,OAZY,kBAYLC,MAZK,EAYGP,IAZH,EAYS;AACpBO,SAAOC,WAAP,CAAmBR,IAAnB;AACA,EAdW;AAeZS,KAfY,gBAePT,IAfO,EAeDO,MAfC,EAeO;AAClBlB,MAAIgB,MAAJ,CAAWL,IAAX,EAAiBO,MAAjB,EADkB,CACO;AACzBlB,MAAIiB,MAAJ,CAAWC,MAAX,EAAmBP,IAAnB,EAFkB,CAEO;AACzB,EAlBW;AAmBZU,OAnBY,kBAmBLV,IAnBK,EAmBC;AACZA,OAAKE,UAAL,CAAgBS,WAAhB,CAA4BX,IAA5B;AACA,SAAOA,IAAP;AACA,EAtBW;AAuBZY,MAvBY,iBAuBNZ,IAvBM,EAuBA;AACX,MAAMa,QAAQ,EAAd;AACA;;;;;;;;;AASA,MAAIC,IAAId,KAAKF,UAAb;AACA,SAAOgB,CAAP,EAAU;AACTD,SAAME,IAAN,CAAW1B,IAAIqB,MAAJ,CAAWV,KAAKF,UAAhB,CAAX;AACA;AACAgB,OAAId,KAAKF,UAAT;AACA;AACD,SAAOe,KAAP;AACA,EAzCW;AA0CZG,KA1CY,gBA0CPhB,IA1CO,EA0CDiB,IA1CC,EA0CKC,KA1CL,EA0CY;AACvB;AACA,MAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BpB,QAAKqB,YAAL,CAAkBJ,IAAlB,EAAwBC,KAAxB;AACA,GAFD,MAEO,IAAIC,UAAUC,MAAV,IAAoB,CAAxB,EAA2B;AACjC,UAAOpB,KAAKsB,YAAL,CAAkBL,IAAlB,CAAP;AACA;AACD,EAjDW;AAkDZM,KAlDY,gBAkDPvB,IAlDO,EAkDDT,MAlDC,EAkDO;AAClB;AACA,MAAI4B,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3B,OAAI,eAAepB,IAAnB,EAAyB;AACxBA,SAAKwB,SAAL,GAAiBjC,MAAjB,CADwB,CACA;AACxB,IAFD,MAEO;AACNS,SAAKyB,WAAL,GAAmBlC,MAAnB;AACA;AACD,GAND,MAMO,IAAI4B,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAClC,OAAI,eAAepB,IAAnB,EAAyB;AACxB,WAAOA,KAAKwB,SAAZ;AACA,IAFD,MAEO;AACN,WAAOxB,KAAKyB,WAAZ;AACA;AACD;AACD,EAjEW;AAkEZC,KAlEY,gBAkEP1B,IAlEO,EAkEDT,MAlEC,EAkEO;AAClB,MAAI4B,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BpB,QAAKL,SAAL,GAAiBJ,MAAjB;AACA,GAFD,MAEO,IAAI4B,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAClC,UAAOpB,KAAKL,SAAZ;AACA;AACD,EAxEW;AAyEZgC,MAzEY,iBAyEN3B,IAzEM,EAyEAiB,IAzEA,EAyEMC,KAzEN,EAyEa;AACxB,MAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BpB,QAAK2B,KAAL,CAAWV,IAAX,IAAmBC,KAAnB;AACA,GAFD,MAEO,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAClC,OAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC7B;AACA,WAAOjB,KAAK2B,KAAL,CAAWV,IAAX,CAAP;AACA,IAHD,MAGO,IAAIA,gBAAgBW,MAApB,EAA4B;AAClC;;AAEA,SAAK,IAAIC,GAAT,IAAgBZ,IAAhB,EAAsB;AACrBjB,UAAK2B,KAAL,CAAWE,GAAX,IAAkBZ,KAAKY,GAAL,CAAlB,CADqB,CACO;AAC5B;AACD;AACD;AACD,EAxFW;;AAyFZC,QAAO;AACNC,KADM,eACF/B,IADE,EACIgC,SADJ,EACe;AACpBhC,QAAKiC,SAAL,CAAeF,GAAf,CAAmBC,SAAnB;AACA,GAHK;AAINtB,QAJM,kBAICV,IAJD,EAIOgC,SAJP,EAIkB;AACvBhC,QAAKiC,SAAL,CAAevB,MAAf,CAAsBsB,SAAtB;AACA,GANK;AAONE,KAPM,eAOFlC,IAPE,EAOIgC,SAPJ,EAOe;AACpB,UAAOhC,KAAKiC,SAAL,CAAeE,QAAf,CAAwBH,SAAxB,CAAP;AACA;AATK,EAzFK;AAoGZI,GApGY,cAoGTpC,IApGS,EAoGHqC,SApGG,EAoGQC,EApGR,EAoGY;AACvBtC,OAAKuC,gBAAL,CAAsBF,SAAtB,EAAiCC,EAAjC;AACA,EAtGW;AAuGZE,IAvGY,eAuGRxC,IAvGQ,EAuGFqC,SAvGE,EAuGSC,EAvGT,EAuGa;AACxBtC,OAAKyC,mBAAL,CAAyBJ,SAAzB,EAAoCC,EAApC;AACA,EAzGW;AA0GZI,KA1GY,gBA0GPC,QA1GO,EA0GGC,KA1GH,EA0GU;AACrB,SAAO,CAACA,SAASnD,QAAV,EAAoBoD,gBAApB,CAAqCF,QAArC,CAAP;AACA,EA5GW;AA6GZpC,OA7GY,kBA6GLP,IA7GK,EA6GC;AACZ,SAAOA,KAAKE,UAAZ;AACA,EA/GW;AAgHZ4C,SAhHY,oBAgHH9C,IAhHG,EAgHG;AACd,SAAOA,KAAK8C,QAAZ;AACA,EAlHW;AAmHZC,SAnHY,oBAmHH/C,IAnHG,EAmHG;AACd,SAAOgD,MAAMC,IAAN,CAAWjD,KAAKE,UAAL,CAAgB4C,QAA3B,EAAqCI,MAArC,CAA4C,UAACC,CAAD;AAAA,UAAOA,MAAMnD,IAAb;AAAA,GAA5C,CAAP,CADc,CACwD;AACtE,EArHW;AAsHZoD,KAtHY,gBAsHPpD,IAtHO,EAsHD;AACV,MAAIc,IAAId,KAAKI,WAAb;AACA,SAAOU,KAAKA,EAAEuC,QAAF,KAAe,CAA3B,EAA8B;AAC7BvC,OAAIA,EAAEV,WAAN,CAD6B,CACX;AAClB;AACD,SAAOU,CAAP;AACA,EA5HW;AA6HZwC,SA7HY,oBA6HHtD,IA7HG,EA6HG;AACd,MAAIc,IAAId,KAAKuD,eAAb;AACA,SAAOzC,KAAKA,EAAEuC,QAAF,KAAe,CAA3B,EAA8B;AAC7BvC,OAAIA,EAAEyC,eAAN;AACA;AACD,SAAOzC,CAAP;AACA,EAnIW;AAoIZ0C,KApIY,gBAoIPC,QApIO,EAoIGnB,EApIH,EAoIO;AAClB;AACA,OAAK,IAAIoB,IAAI,CAAb,EAAgBA,IAAID,SAASrC,MAA7B,EAAqCsC,GAArC,EAA0C;AACzCpB,MAAGqB,IAAH,CAAQ,IAAR,EAAcF,SAASC,CAAT,CAAd;AACA;AACD,EAzIW;AA0IZE,MA1IY,iBA0IN5D,IA1IM,EA0IA;AACX,MAAM6D,OAAOxE,IAAIyD,QAAJ,CAAa9C,KAAKE,UAAlB,CAAb;AACA,MAAIwD,UAAJ;AACA,OAAKA,IAAI,CAAT,EAAYA,IAAIG,KAAKzC,MAArB,EAA6BsC,GAA7B,EAAkC;AACjC,OAAIG,KAAKH,CAAL,MAAY1D,IAAhB,EAAsB;AACrB;AACA;AACD;AACD,SAAO0D,CAAP;AACA;AAnJW,CAAb","file":"dom.3efd442d.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n\tcreate(string) {\r\n\t\tconst container = document.createElement('template') // template：样板，可包含任何元素。\r\n\t\tcontainer.innerHTML = string.trim() // 加 trim 防止空格。trim 的功能：将字符串两边的空格去掉。\r\n\t\treturn container.content.firstChild // 使用 template 时，不能使用 container.children[0]。\r\n\t},\r\n\tafter(node, node2) {\r\n\t\tnode.parentNode.insertBefore(node2, node.nextSibling) // insert：插入；sibling：兄弟姐妹\r\n\t},\r\n\tbefore(node, node2) {\r\n\t\tnode.parentNode.insertBefore(node2, node)\r\n\t},\r\n\tappend(parent, node) {\r\n\t\tparent.appendChild(node)\r\n\t},\r\n\twrap(node, parent) {\r\n\t\tdom.before(node, parent) // 新增节点先放 node 前面\r\n\t\tdom.append(parent, node) // 再将 node 设置为子节点\r\n\t},\r\n\tremove(node) {\r\n\t\tnode.parentNode.removeChild(node)\r\n\t\treturn node\r\n\t},\r\n\tempty(node) {\r\n\t\tconst array = []\r\n\t\t/*\r\n        const childNodes = node.childNodes\r\n        简写：const {childNodes} = node\r\n\t\tfor (let i = 0; i < childNodes.length; i++) {\r\n\t\t\tdom.remove(childNodes[i])\r\n\t\t\tarray.push(childNodes[i])\r\n\t\t }\r\n\t\t遍历 node 里面的所有元素，但这种方法 childNodes.length 是动态变化的，每删除一个元素，就减 1。所以，不*能使用该方法。\r\n\t\t*/\r\n\t\tlet x = node.firstChild\r\n\t\twhile (x) {\r\n\t\t\tarray.push(dom.remove(node.firstChild))\r\n\t\t\t// 删除并放到数组里面\r\n\t\t\tx = node.firstChild\r\n\t\t}\r\n\t\treturn array\r\n\t},\r\n\tattr(node, name, value) {\r\n\t\t// 重载\r\n\t\tif (arguments.length === 3) {\r\n\t\t\tnode.setAttribute(name, value)\r\n\t\t} else if (arguments.length == 2) {\r\n\t\t\treturn node.getAttribute(name)\r\n\t\t}\r\n\t},\r\n\ttext(node, string) {\r\n\t\t// 适配\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tif ('innerText' in node) {\r\n\t\t\t\tnode.innerText = string // 支持包括 IE 的所有浏览器\r\n\t\t\t} else {\r\n\t\t\t\tnode.textContent = string\r\n\t\t\t}\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\tif ('innerText' in node) {\r\n\t\t\t\treturn node.innerText\r\n\t\t\t} else {\r\n\t\t\t\treturn node.textContent\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thtml(node, string) {\r\n\t\tif (arguments.length === 2) {\r\n\t\t\tnode.innerHTML = string\r\n\t\t} else if (arguments.length === 1) {\r\n\t\t\treturn node.innerHTML\r\n\t\t}\r\n\t},\r\n\tstyle(node, name, value) {\r\n\t\tif (arguments.length === 3) {\r\n\t\t\tnode.style[name] = value\r\n\t\t} else if (arguments.length === 2) {\r\n\t\t\tif (typeof name === 'string') {\r\n\t\t\t\t// typeof：返回一个字符串，表示未经计算的操作数的类型，可能为\"number\"、\"boolean\"、\"string\"等。\r\n\t\t\t\treturn node.style[name]\r\n\t\t\t} else if (name instanceof Object) {\r\n\t\t\t\t// instanceof：检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上，结果为\"true\"或者\"false\"。\r\n\r\n\t\t\t\tfor (let key in name) {\r\n\t\t\t\t\tnode.style[key] = name[key] // 变量要使用 [] 括起来，name[key] 是变量 name 的值。\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tclass: {\r\n\t\tadd(node, className) {\r\n\t\t\tnode.classList.add(className)\r\n\t\t},\r\n\t\tremove(node, className) {\r\n\t\t\tnode.classList.remove(className)\r\n\t\t},\r\n\t\thas(node, className) {\r\n\t\t\treturn node.classList.contains(className)\r\n\t\t},\r\n\t},\r\n\ton(node, eventName, fn) {\r\n\t\tnode.addEventListener(eventName, fn)\r\n\t},\r\n\toff(node, eventName, fn) {\r\n\t\tnode.removeEventListener(eventName, fn)\r\n\t},\r\n\tfind(selector, scope) {\r\n\t\treturn (scope || document).querySelectorAll(selector)\r\n\t},\r\n\tparent(node) {\r\n\t\treturn node.parentNode\r\n\t},\r\n\tchildren(node) {\r\n\t\treturn node.children\r\n\t},\r\n\tsiblings(node) {\r\n\t\treturn Array.from(node.parentNode.children).filter((n) => n !== node) // 先找到父节点，且返回值是数组; filter()创建新的类型化数组，含有所有通过了测试的元素，测试由提供的函数实现（过滤）。\r\n\t},\r\n\tnext(node) {\r\n\t\tlet x = node.nextSibling\r\n\t\twhile (x && x.nodeType === 3) {\r\n\t\t\tx = x.nextSibling // 判断 x.nodeType 是否为空格，是空格就跳过。\r\n\t\t}\r\n\t\treturn x\r\n\t},\r\n\tprevious(node) {\r\n\t\tlet x = node.previousSibling\r\n\t\twhile (x && x.nodeType === 3) {\r\n\t\t\tx = x.previousSibling\r\n\t\t}\r\n\t\treturn x\r\n\t},\r\n\teach(nodeList, fn) {\r\n\t\t// 遍历所有元素{\r\n\t\tfor (let i = 0; i < nodeList.length; i++) {\r\n\t\t\tfn.call(null, nodeList[i])\r\n\t\t}\r\n\t},\r\n\tindex(node) {\r\n\t\tconst list = dom.children(node.parentNode)\r\n\t\tlet i\r\n\t\tfor (i = 0; i < list.length; i++) {\r\n\t\t\tif (list[i] === node) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i\r\n\t},\r\n}\r\n"]}